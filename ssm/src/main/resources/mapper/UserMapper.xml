<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.UserMapper">
    <insert id="add">
        INSERT INTO t_user(user_name,password,address) values (#{userName},#{password},#{address})
    </insert>
    <update id="update">
        update movie set user_name = #{userName},password = #{password},
        address = #{address}
        where id = #{id}
    </update>
    <delete id="delById">
        delete from t_user where id = #{id}
    </delete>
    <!-- namespace属性值推荐写完全限定名 -->
    <!--一级缓存默认开启，手动开启二级缓存-->
    <!--<cache/>-->
    <!-- 
		sql区
		根据Id查询User对象
		id: 类似方法名`
		parameterType : 参数类型（可选）
		resultType : 返回值类型(可选)
		 增删改不必写返回值类型 ,需要指定参数类型parameterType,获取自增长主键id
	-->

    <select id="findAll" resultType="User">
        SELECT * FROM t_user
    </select>
    <select id="findById" resultType="com.kaishengit.entity.User">
        select * from t_user where id = #{id}
    </select>
    <select id="findByParam" resultType="com.kaishengit.entity.User">
        SELECT * from t_user
        <where>
            <if test="userName != null and userName != '' ">
                user_name like concat('%',#{userName},'%')
            </if>
            <if test="address != null and address != '' ">
                address like concat('%',#{address},'$')
            </if>
            <if test="min != null">
                and id  &gt;= #{min}
            </if>
            <if test="max != null">
                and id  &lt;= #{max}
            </if>
        </where>
    </select>

</mapper>